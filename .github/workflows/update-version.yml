name: Update Addon Version

on:
  push:
    paths:
      - '**.lua'
    branches: [ main ]

permissions:
  contents: write

jobs:
  update-version:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Calculate version
        id: version
        run: |
          if [ -f ".base-version" ]; then
            BASE_VERSION=$(cat .base-version)
          else
            BASE_VERSION="1.0"
          fi
          BUILD_NUMBER=$(git rev-list --count HEAD)
          NEW_VERSION="${BASE_VERSION}.${BUILD_NUMBER}"
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "New version: $NEW_VERSION"

      - name: Update TOC version
        run: |
          sed -i "s/^## Version:.*$/## Version: ${{ steps.version.outputs.new_version }}/" AferistHelper.toc

      - name: Create auto-tag for significant versions
        id: auto_tag
        run: |
          # –°–æ–∑–¥–∞–µ–º —Ç–µ–≥ —Ç–æ–ª—å–∫–æ –¥–ª—è "–∫—Ä–∞—Å–∏–≤—ã—Ö" –≤–µ—Ä—Å–∏–π (–∫–æ–≥–¥–∞ build_number –∫—Ä—É–≥–ª—ã–π)
          BUILD_NUMBER=$(git rev-list --count HEAD)
          if [ $((BUILD_NUMBER % 50)) -eq 0 ]; then
            TAG_NAME="auto-v${{ steps.version.outputs.new_version }}"
            git tag $TAG_NAME
            git push origin $TAG_NAME
            echo "created_tag=true" >> $GITHUB_OUTPUT
            echo "üè∑Ô∏è Created auto-tag: $TAG_NAME"
          else
            echo "created_tag=false" >> $GITHUB_OUTPUT
            echo "üìù Skip auto-tag (build number: $BUILD_NUMBER)"
          fi

      - name: Commit and push changes
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add AferistHelper.toc
          git commit -m "chore: auto-build ${{ steps.version.outputs.new_version }} [skip ci]"
          git push
